{"ast":null,"code":"var _jsxFileName = \"/home/lis/Desktop/0 CUBOS ACADEMY/FRONT-END/M\\xD3DULO 3 - FRONT-END/Desafio-de-front/front-integral-desafio-m03/src/components/Chip/Chip.js\",\n    _s = $RefreshSig$();\n\nimport './style.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chip({\n  setFiltro,\n  filtro,\n  item\n}) {\n  _s();\n\n  const [chipAtivo, setChipAtivo] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `container-chip ${chipAtivo && \"chip-selected\"}`,\n    onClick: () => {\n      setFiltro(prevState => {\n        const array = [...prevState];\n        const index = array.findIndex(x => x === item);\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          setChipAtivo(false);\n          console.log(array);\n          return array;\n        } else {\n          const arrayModificado = [...array, item];\n          setChipAtivo(true);\n          console.log(chipAtivo);\n          return arrayModificado;\n        }\n\n        ;\n      }); // setChipAtivo(chipAtivo ? false : true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"chip-span\",\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: 'plus-icon',\n      src: './assets/plus-icon.svg'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, item, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n} // export function Chip({ setFiltro, item }) {\n//     const [chipAtivo, setChipAtivo] = useState(false);\n//     return (\n//         <button\n//             className={`container-chip ${chipAtivo && \"chip-selected\"}`}\n//             onClick={() => {\n//                 setFiltro(prevState => {\n//                     const array = [...prevState];\n//                     const index = array.findIndex(x => x === item);\n//                     if (index !== -1){\n//                         array.splice(index, 1);\n//                         // setChipAtivo(false);\n//                         return array;\n//                     } else {\n//                         const arrayModificado = [...array, item];\n//                         return arrayModificado;\n//                     };\n//                 });\n//                 setChipAtivo(chipAtivo ? false : true);\n//             }\n//             }\n//             key={item}>\n//             <span className=\"chip-span\">{item}</span>\n//             <img className={chipAtivo ? 'x-icon' : 'plus-icon'} src={chipAtivo ? './assets/x-icon.svg' : './assets/plus-icon.svg'} />\n//         </button>\n//     )\n// }\n\n_s(Chip, \"OZS5SwsfBZLzUGg5MKyWZaLCZ8Q=\");\n\n_c = Chip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chip\");","map":{"version":3,"sources":["/home/lis/Desktop/0 CUBOS ACADEMY/FRONT-END/MÃ“DULO 3 - FRONT-END/Desafio-de-front/front-integral-desafio-m03/src/components/Chip/Chip.js"],"names":["useState","useEffect","Chip","setFiltro","filtro","item","chipAtivo","setChipAtivo","prevState","array","index","findIndex","x","splice","console","log","arrayModificado"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,OAAO,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAd,EAA2C;AAAA;;AAC9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAIA,sBACI;AACI,IAAA,SAAS,EAAG,kBAAiBM,SAAS,IAAI,eAAgB,EAD9D;AAEI,IAAA,OAAO,EAAE,MAAM;AACXH,MAAAA,SAAS,CAACK,SAAS,IAAI;AACnB,cAAMC,KAAK,GAAG,CAAC,GAAGD,SAAJ,CAAd;AACA,cAAME,KAAK,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAIA,CAAC,KAAKP,IAA3B,CAAd;;AACA,YAAIK,KAAK,KAAK,CAAC,CAAf,EAAiB;AACbD,UAAAA,KAAK,CAACI,MAAN,CAAaH,KAAb,EAAoB,CAApB;AACAH,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,iBAAOA,KAAP;AACH,SALD,MAKO;AACH,gBAAMO,eAAe,GAAG,CAAC,GAAGP,KAAJ,EAAWJ,IAAX,CAAxB;AACAE,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACA,iBAAOU,eAAP;AACH;;AAAA;AACJ,OAdQ,CAAT,CADW,CAgBX;AACH,KAnBL;AAAA,4BAsBI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BX;AAA7B;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAuBI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAA6B,MAAA,GAAG,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA,KAqBSA,IArBT;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,C,CAGD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA9DgBH,I;;KAAAA,I","sourcesContent":["import './style.css';\nimport { useState, useEffect } from 'react';\n\nexport function Chip({ setFiltro, filtro, item }) {\n    const [chipAtivo, setChipAtivo] = useState(false);\n\n\n\n    return (\n        <button\n            className={`container-chip ${chipAtivo && \"chip-selected\"}`}\n            onClick={() => {\n                setFiltro(prevState => {\n                    const array = [...prevState];\n                    const index = array.findIndex(x => x === item);\n                    if (index !== -1){\n                        array.splice(index, 1);\n                        setChipAtivo(false);\n                        console.log(array);\n                        return array;\n                    } else {\n                        const arrayModificado = [...array, item];\n                        setChipAtivo(true);\n                        console.log(chipAtivo);\n                        return arrayModificado;\n                    };\n                });\n                // setChipAtivo(chipAtivo ? false : true);\n            }\n            }\n            key={item}>\n            <span className=\"chip-span\">{item}</span>\n            <img className={'plus-icon'} src={'./assets/plus-icon.svg'} />\n        </button>\n    )\n}\n\n\n// export function Chip({ setFiltro, item }) {\n//     const [chipAtivo, setChipAtivo] = useState(false);\n\n//     return (\n//         <button\n//             className={`container-chip ${chipAtivo && \"chip-selected\"}`}\n//             onClick={() => {\n//                 setFiltro(prevState => {\n//                     const array = [...prevState];\n//                     const index = array.findIndex(x => x === item);\n//                     if (index !== -1){\n//                         array.splice(index, 1);\n//                         // setChipAtivo(false);\n//                         return array;\n//                     } else {\n//                         const arrayModificado = [...array, item];\n//                         return arrayModificado;\n//                     };\n//                 });\n//                 setChipAtivo(chipAtivo ? false : true);\n//             }\n//             }\n//             key={item}>\n//             <span className=\"chip-span\">{item}</span>\n//             <img className={chipAtivo ? 'x-icon' : 'plus-icon'} src={chipAtivo ? './assets/x-icon.svg' : './assets/plus-icon.svg'} />\n//         </button>\n//     )\n// }"]},"metadata":{},"sourceType":"module"}