{"ast":null,"code":"export function handleOrdem(ordem, setOrdem, setRegistros, tipo) {\n  // setOrdemDia(false);\n  // setOrdemValor(false);\n  if (ordem !== \"crescente\") {\n    setOrdem(\"crescente\");\n  } else {\n    setOrdem(\"decrescente\");\n  }\n\n  ;\n  setRegistros(prevState => {\n    const array = [...prevState];\n    const arrayOrdenado = array.sort((a, b) => {\n      if (ordem === \"crescente\") {\n        if (tipo === \"date\") {\n          return new Date(b.date) - new Date(a.date);\n        }\n      } else if (ordem === \"decrescente\") {\n        if (tipo === \"date\") {\n          return new Date(a.date) - new Date(b.date);\n        } else if (tipo === \"week-day\") {}\n      }\n    });\n    return arrayOrdenado;\n  });\n}\n;","map":{"version":3,"sources":["/home/lis/Desktop/0 CUBOS ACADEMY/FRONT-END/MÃ“DULO 3 - FRONT-END/Desafio-de-front/front-integral-desafio-m03/src/utils/handleOrdem.js"],"names":["handleOrdem","ordem","setOrdem","setRegistros","tipo","prevState","array","arrayOrdenado","sort","a","b","Date","date"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,YAAtC,EAAoDC,IAApD,EAA0D;AAC7D;AACA;AACA,MAAIH,KAAK,KAAK,WAAd,EAA2B;AACvBC,IAAAA,QAAQ,CAAC,WAAD,CAAR;AAEH,GAHD,MAGO;AACHA,IAAAA,QAAQ,CAAC,aAAD,CAAR;AACH;;AAAA;AAEDC,EAAAA,YAAY,CAACE,SAAS,IAAI;AACtB,UAAMC,KAAK,GAAG,CAAC,GAAGD,SAAJ,CAAd;AACA,UAAME,aAAa,GAAGD,KAAK,CAACE,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvC,UAAIT,KAAK,KAAK,WAAd,EAA2B;AACvB,YAAIG,IAAI,KAAK,MAAb,EAAqB;AACjB,iBAAO,IAAIO,IAAJ,CAASD,CAAC,CAACE,IAAX,IAAmB,IAAID,IAAJ,CAASF,CAAC,CAACG,IAAX,CAA1B;AACH;AACJ,OAJD,MAIO,IAAIX,KAAK,KAAK,aAAd,EAA6B;AAChC,YAAIG,IAAI,KAAK,MAAb,EAAoB;AAChB,iBAAO,IAAIO,IAAJ,CAASF,CAAC,CAACG,IAAX,IAAmB,IAAID,IAAJ,CAASD,CAAC,CAACE,IAAX,CAA1B;AACH,SAFD,MAEO,IAAIR,IAAI,KAAK,UAAb,EAAwB,CAE9B;AACJ;AACJ,KAZqB,CAAtB;AAaA,WAAOG,aAAP;AACH,GAhBW,CAAZ;AAiBH;AAAA","sourcesContent":["export function handleOrdem(ordem, setOrdem, setRegistros, tipo) {\n    // setOrdemDia(false);\n    // setOrdemValor(false);\n    if (ordem !== \"crescente\") {\n        setOrdem(\"crescente\");\n\n    } else {\n        setOrdem(\"decrescente\");\n    };\n\n    setRegistros(prevState => {\n        const array = [...prevState];\n        const arrayOrdenado = array.sort((a, b) => {\n            if (ordem === \"crescente\") {\n                if (tipo === \"date\") {\n                    return new Date(b.date) - new Date(a.date);\n                }\n            } else if (ordem === \"decrescente\") {\n                if (tipo === \"date\"){\n                    return new Date(a.date) - new Date(b.date);\n                } else if (tipo === \"week-day\"){\n                    \n                }\n            }\n        });\n        return arrayOrdenado;\n    });\n};"]},"metadata":{},"sourceType":"module"}