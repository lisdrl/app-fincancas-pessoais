{"ast":null,"code":"export function handleOrdem(ordem, setOrdem, setRegistros, tipo, set1, set2) {\n  set1(false);\n  set2(false);\n  console.log(ordem);\n\n  if (ordem !== \"crescente\") {\n    setOrdem(\"crescente\");\n  } else {\n    setOrdem(\"decrescente\");\n  }\n\n  ; // setRegistros(prevState => {\n  //     const array = [...prevState];\n  //     const arrayOrdenado = array.sort((a, b) => {\n  //         if (ordem === \"crescente\") {\n  //             setOrdem(\"decrescente\")\n  //             if (tipo === \"date\") {\n  //                 return new Date(b.date) - new Date(a.date);\n  //             } else if (tipo === \"week-day\") {\n  //             } else if (tipo === \"value\") {\n  //                 return Number(b.value) - Number(a.value);\n  //             };\n  //         } else if (ordem === \"decrescente\") {\n  //             setOrdem(\"crescente\")\n  //             if (tipo === \"date\") {\n  //                 return new Date(a.date) - new Date(b.date);\n  //             } else if (tipo === \"week-day\") {\n  //             } else if (tipo === \"value\") {\n  //                 return Number(a.value) - Number(b.value);\n  //             };\n  //         };\n  //     });\n  //     return arrayOrdenado;\n  // });\n}\n;","map":{"version":3,"sources":["/home/lis/Desktop/0 CUBOS ACADEMY/FRONT-END/MÃ“DULO 3 - FRONT-END/Desafio-de-front/front-integral-desafio-m03/src/utils/handleOrdem.js"],"names":["handleOrdem","ordem","setOrdem","setRegistros","tipo","set1","set2","console","log"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,YAAtC,EAAoDC,IAApD,EAA0DC,IAA1D,EAAgEC,IAAhE,EAAsE;AACzED,EAAAA,IAAI,CAAC,KAAD,CAAJ;AACAC,EAAAA,IAAI,CAAC,KAAD,CAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AACA,MAAIA,KAAK,KAAK,WAAd,EAA2B;AACvBC,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACH,GAFD,MAEO;AACHA,IAAAA,QAAQ,CAAC,aAAD,CAAR;AACH;;AAAA,GARwE,CAUzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAAA","sourcesContent":["export function handleOrdem(ordem, setOrdem, setRegistros, tipo, set1, set2) {\n    set1(false);\n    set2(false);\n    console.log(ordem)\n    if (ordem !== \"crescente\") {\n        setOrdem(\"crescente\");\n    } else {\n        setOrdem(\"decrescente\");\n    };\n\n    // setRegistros(prevState => {\n    //     const array = [...prevState];\n    //     const arrayOrdenado = array.sort((a, b) => {\n    //         if (ordem === \"crescente\") {\n    //             setOrdem(\"decrescente\")\n    //             if (tipo === \"date\") {\n    //                 return new Date(b.date) - new Date(a.date);\n    //             } else if (tipo === \"week-day\") {\n\n    //             } else if (tipo === \"value\") {\n    //                 return Number(b.value) - Number(a.value);\n    //             };\n    //         } else if (ordem === \"decrescente\") {\n    //             setOrdem(\"crescente\")\n    //             if (tipo === \"date\") {\n    //                 return new Date(a.date) - new Date(b.date);\n    //             } else if (tipo === \"week-day\") {\n\n    //             } else if (tipo === \"value\") {\n    //                 return Number(a.value) - Number(b.value);\n    //             };\n    //         };\n    //     });\n    //     return arrayOrdenado;\n    // });\n};"]},"metadata":{},"sourceType":"module"}